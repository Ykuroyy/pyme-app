EXTRA_TOOLS = [
    {
        "id": 31,
        "category": "ファイル管理",
        "number": "31/100",
        "title": "PDF一括結合",
        "desc": "複数のPDFファイルを自動で1つに結合",
        "how_to": "PyPDF2ライブラリを使って、複数のPDFファイルを1つのファイルにまとめます。",
        "sample_code": "from PyPDF2 import PdfMerger\nimport os\n\npdf_files = ['file1.pdf', 'file2.pdf', 'file3.pdf']\nmerger = PdfMerger()\nfor pdf in pdf_files:\n    merger.append(pdf)\nmerger.write('merged.pdf')\nmerger.close()\nprint('PDF結合完了！')",
        "libraries": "PyPDF2、os（標準ライブラリ）",
        "explanation": "複数のPDFを一括で結合することで、資料整理や提出が効率化できます。",
        "benefits": ["手作業が不要", "一括結合", "資料整理が簡単"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "PythonでPDF一括結合のコードを作成してください。以下の条件でお願いします：\n\n1. PyPDF2ライブラリを使う\n2. 複数のPDFファイルを1つにまとめる\n3. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: 複数のPDF\n出力ファイル: merged.pdf\n\nコピペ用プロンプト:\nPythonでPDF一括結合のコードを作成してください。PyPDF2ライブラリを使って複数のPDFファイルを1つにまとめるコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 32,
        "category": "ファイル管理",
        "number": "32/100",
        "title": "フォルダ自動圧縮",
        "desc": "指定フォルダを自動でZIP圧縮",
        "how_to": "shutilライブラリを使って、指定したフォルダをZIPファイルに圧縮します。",
        "sample_code": "import shutil\nfolder_path = 'target_folder'\nshutil.make_archive(folder_path, 'zip', folder_path)\nprint('圧縮完了！')",
        "libraries": "shutil（標準ライブラリ）",
        "explanation": "フォルダを自動で圧縮することで、バックアップやメール添付が簡単になります。",
        "benefits": ["バックアップが簡単", "メール添付が楽", "手作業が不要"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonでフォルダ自動圧縮のコードを作成してください。以下の条件でお願いします：\n\n1. shutilライブラリを使う\n2. 指定したフォルダをZIPファイルに圧縮する\n3. 初心者でも理解できるようにコメントを詳しく書く\n\n対象フォルダ: target_folder\n出力ファイル: target_folder.zip\n\nコピペ用プロンプト:\nPythonでフォルダ自動圧縮のコードを作成してください。shutilライブラリを使って指定したフォルダをZIPファイルに圧縮するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 33,
        "category": "ファイル管理",
        "number": "33/100",
        "title": "画像一括リネーム",
        "desc": "画像ファイルを自動で連番リネーム",
        "how_to": "osライブラリを使って、フォルダ内の画像ファイルを連番でリネームします。",
        "sample_code": "import os\nfolder = 'images'\nfor i, filename in enumerate(os.listdir(folder), 1):\n    if filename.lower().endswith(('.jpg', '.jpeg', '.png')):\n        new_name = f'image_{i:03d}' + os.path.splitext(filename)[1]\n        os.rename(os.path.join(folder, filename), os.path.join(folder, new_name))\n        print(f'{filename} → {new_name}')\nprint('リネーム完了！')",
        "libraries": "os（標準ライブラリ）",
        "explanation": "大量の画像を一括でリネームすることで、整理や管理が簡単になります。",
        "benefits": ["整理が簡単", "一括処理", "手作業が不要"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで画像一括リネームのコードを作成してください。以下の条件でお願いします：\n\n1. osライブラリを使う\n2. フォルダ内の画像ファイルを連番でリネームする\n3. 初心者でも理解できるようにコメントを詳しく書く\n\n対象フォルダ: images\nリネーム形式: image_001.jpg など\n\nコピペ用プロンプト:\nPythonで画像一括リネームのコードを作成してください。osライブラリを使ってフォルダ内の画像ファイルを連番でリネームするコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 34,
        "category": "データ処理・分析",
        "number": "34/100",
        "title": "売上データ自動分析",
        "desc": "売上データを自動で分析・レポート化",
        "how_to": "CSV売上データを自動で分析し、月次・商品別レポートを作成します。",
        "sample_code": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('sales.csv')\nmonthly = df.groupby('月')['売上'].sum()\nmonthly.plot(kind='line')\nplt.savefig('monthly_sales.png')\nprint('分析完了！')",
        "libraries": "pandas、matplotlib",
        "explanation": "売上データを自動で分析。月次・商品別の傾向が一目で分かる。",
        "benefits": ["分析が楽", "グラフも自動", "戦略立案に活用"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで売上データ自動分析のコードを作成してください。以下の条件でお願いします：\n\n1. pandasとmatplotlibライブラリを使う\n2. CSVファイルの売上データを読み込む\n3. 月次・商品別・取引先別の分析を行う\n4. 売上傾向と成長率を計算する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（日付、商品名、取引先、売上金額）\n出力形式: Excelファイル（sales_analysis.xlsx）とグラフ画像\n分析項目: 月次売上、商品別売上、取引先別売上、成長率\n\nコピペ用プロンプト:\nPythonで売上データ自動分析のコードを作成してください。pandasとmatplotlibライブラリを使ってCSVファイルの売上データを読み込み、月次・商品別・取引先別の分析を行って売上傾向と成長率を計算するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 35,
        "category": "ファイル管理",
        "number": "35/100",
        "title": "ファイル自動分類",
        "desc": "ファイルを拡張子別に自動分類・整理",
        "how_to": "指定フォルダ内のファイルを拡張子別に自動分類し、整理します。",
        "sample_code": "import os\nimport shutil\nfor file in os.listdir('.'):\n    if file.endswith('.pdf'):\n        shutil.move(file, 'pdfs/')\n    elif file.endswith('.jpg'):\n        shutil.move(file, 'images/')\nprint('分類完了！')",
        "libraries": "os、shutil",
        "explanation": "ファイルを自動で分類。探しやすく、整理も楽に。",
        "benefits": ["整理が楽", "探しやすい", "自動化"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonでファイル自動分類のコードを作成してください。以下の条件でお願いします：\n\n1. osとshutilライブラリを使う\n2. 指定したフォルダ内のファイルを拡張子別に分類する\n3. 画像、文書、動画、音楽の4つのカテゴリに分ける\n4. 各カテゴリ用のフォルダを自動作成する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n対象フォルダ: 指定したフォルダパス\n分類基準: ファイル拡張子（.jpg、.pdf、.mp4、.mp3など）\n出力形式: 分類されたフォルダ構造\n\nコピペ用プロンプト:\nPythonでファイル自動分類のコードを作成してください。osとshutilライブラリを使って指定したフォルダ内のファイルを拡張子別に分類し、画像、文書、動画、音楽の4つのカテゴリに分けて各カテゴリ用のフォルダを自動作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 36,
        "category": "文書作成・管理",
        "number": "36/100",
        "title": "レポート自動生成",
        "desc": "データからレポートを自動生成・PDF化",
        "how_to": "CSVデータから月次レポートを自動生成し、PDF化します。",
        "sample_code": "import pandas as pd\nfrom reportlab.pdfgen import canvas\ndf = pd.read_csv('data.csv')\ntotal = df['売上'].sum()\nc = canvas.Canvas('report.pdf')\nc.drawString(100, 750, f'月次レポート\\n総売上: {total:,}円')\nc.save()\nprint('レポート作成完了！')",
        "libraries": "pandas、reportlab",
        "explanation": "レポートを自動で生成。手作業不要で、毎月の報告も楽に。",
        "benefits": ["手作業不要", "PDF化", "時短"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonでレポート自動生成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasとreportlabライブラリを使う\n2. CSVファイルのデータを読み込む\n3. 月次レポートの基本情報を設定する\n4. 売上、利益、顧客数の集計を行う\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（日付、売上、利益、顧客数）\n出力形式: PDFファイル（monthly_report.pdf）\nレポート項目: 月次売上、利益、顧客数、成長率\n\nコピペ用プロンプト:\nPythonでレポート自動生成のコードを作成してください。pandasとreportlabライブラリを使ってCSVファイルのデータを読み込み、月次レポートの基本情報を設定して売上、利益、顧客数の集計を行うコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 37,
        "category": "データ処理・分析",
        "number": "37/100",
        "title": "顧客データ自動分析",
        "desc": "顧客データを自動で分析・セグメント化",
        "how_to": "CSV顧客データを自動で分析し、顧客セグメントを作成します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('customers.csv')\ndf['購入頻度'] = df.groupby('顧客ID')['購入回数'].transform('sum')\ndf.to_excel('customer_analysis.xlsx', index=False)\nprint('顧客分析完了！')",
        "libraries": "pandas",
        "explanation": "顧客データを自動で分析。セグメント化で営業戦略に活用。",
        "benefits": ["分析が楽", "セグメント化", "営業戦略に活用"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで顧客データ自動分析のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの顧客データを読み込む\n3. 購入頻度、購入金額、最終購入日を分析する\n4. 顧客をセグメント（VIP、一般、休眠）に分類する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（顧客ID、購入日、購入金額、商品名）\n出力形式: Excelファイル（customer_segments.xlsx）\n分析項目: 購入頻度、購入金額、最終購入日、顧客セグメント\n\nコピペ用プロンプト:\nPythonで顧客データ自動分析のコードを作成してください。pandasライブラリを使ってCSVファイルの顧客データを読み込み、購入頻度、購入金額、最終購入日を分析して顧客をセグメント（VIP、一般、休眠）に分類するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 38,
        "category": "スタッフ管理",
        "number": "38/100",
        "title": "社員スキル管理",
        "desc": "社員のスキル情報を自動で管理・Excel化",
        "how_to": "CSVや手入力データから社員スキル情報を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'氏名': '田中', 'スキル': 'Python', 'レベル': '上級'},\n    {'氏名': '佐藤', 'スキル': 'Excel', 'レベル': '中級'}\n]\npd.DataFrame(data).to_excel('skills.xlsx', index=False)\nprint('スキル管理完了！')",
        "libraries": "pandas",
        "explanation": "社員スキルを自動で管理。人材配置や研修計画に活用。",
        "benefits": ["人材配置が楽", "Excel化", "研修計画に活用"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社員スキル管理のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. 社員のスキル情報を管理する\n3. スキル名、レベル、取得日を記録する\n4. スキル別・レベル別の集計を行う\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n管理項目: 氏名、スキル名、レベル、取得日\n出力形式: Excelファイル（employee_skills.xlsx）\n機能: スキル追加、レベル更新、集計レポート\n\nコピペ用プロンプト:\nPythonで社員スキル管理のコードを作成してください。pandasライブラリを使って社員のスキル情報（氏名、スキル名、レベル、取得日）を管理し、スキル別・レベル別の集計を行うコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 39,
        "category": "在庫管理",
        "number": "39/100",
        "title": "在庫アラート自動通知",
        "desc": "在庫不足時に自動でアラート通知",
        "how_to": "在庫データをチェックし、不足時に自動でメール通知します。",
        "sample_code": "import pandas as pd\nimport smtplib\ndf = pd.read_csv('inventory.csv')\nlow_stock = df[df['在庫数'] < 10]\nif len(low_stock) > 0:\n    print('在庫不足商品があります！')\nprint('チェック完了！')",
        "libraries": "pandas、smtplib",
        "explanation": "在庫不足を自動で検知。発注漏れを防止。",
        "benefits": ["発注漏れ防止", "自動化", "在庫管理が楽"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで在庫アラート自動通知のコードを作成してください。以下の条件でお願いします：\n\n1. pandasとsmtplibライブラリを使う\n2. CSVファイルの在庫データを読み込む\n3. 在庫数が閾値以下の商品を検出する\n4. 在庫不足商品のリストをメールで通知する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（商品名、在庫数、最小在庫数）\n通知方法: メール送信\nアラート条件: 在庫数 < 最小在庫数\n\nコピペ用プロンプト:\nPythonで在庫アラート自動通知のコードを作成してください。pandasとsmtplibライブラリを使ってCSVファイルの在庫データを読み込み、在庫数が閾値以下の商品を検出して在庫不足商品のリストをメールで通知するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 40,
        "category": "データ処理・分析",
        "number": "40/100",
        "title": "データ自動クレンジング",
        "desc": "データの欠損値・重複を自動で処理",
        "how_to": "CSVデータの欠損値や重複を自動で検出・処理します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('data.csv')\ndf = df.dropna()\ndf = df.drop_duplicates()\ndf.to_csv('cleaned_data.csv', index=False)\nprint('クレンジング完了！')",
        "libraries": "pandas",
        "explanation": "データを自動でクレンジング。分析の精度向上。",
        "benefits": ["データ品質向上", "分析精度向上", "自動化"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonでデータ自動クレンジングのコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルのデータを読み込む\n3. 欠損値の検出と処理を行う\n4. 重複データの削除を行う\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（生データ）\n出力形式: CSVファイル（cleaned_data.csv）\n処理項目: 欠損値処理、重複削除、データ型変換\n\nコピペ用プロンプト:\nPythonでデータ自動クレンジングのコードを作成してください。pandasライブラリを使ってCSVファイルのデータを読み込み、欠損値の検出と処理を行って重複データを削除するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 41,
        "category": "文書作成・管理",
        "number": "41/100",
        "title": "契約書自動生成",
        "desc": "契約書のテンプレートを自動生成・PDF化",
        "how_to": "契約内容を入力するだけで契約書を自動生成しPDF化します。",
        "sample_code": "from reportlab.pdfgen import canvas\nc = canvas.Canvas('contract.pdf')\nc.drawString(100, 750, '契約書')\nc.drawString(100, 700, '契約者: 株式会社サンプル')\nc.drawString(100, 650, '契約内容: システム開発')\nc.save()\nprint('契約書作成完了！')",
        "libraries": "reportlab",
        "explanation": "契約書を自動で生成。手書き・転記不要。",
        "benefits": ["手書き不要", "PDF化", "時短"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで契約書自動生成のコードを作成してください。以下の条件でお願いします：\n\n1. reportlabライブラリを使う\n2. 契約書の基本情報を設定する\n3. 契約者、契約内容、金額を入力する\n4. 見やすい契約書形式にフォーマットする\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力情報: 契約者名、契約内容、金額、契約期間\n出力形式: PDFファイル（contract.pdf）\n契約書項目: 契約者、契約内容、金額、期間、署名欄\n\nコピペ用プロンプト:\nPythonで契約書自動生成のコードを作成してください。reportlabライブラリを使って契約書の基本情報（契約者名、契約内容、金額、契約期間）を設定し、見やすい契約書形式にフォーマットするコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 42,
        "category": "顧客管理",
        "number": "42/100",
        "title": "顧客フォローアップ自動化",
        "desc": "顧客フォローアップを自動でスケジュール・通知",
        "how_to": "顧客データからフォローアップ予定を自動でスケジュールし、通知します。",
        "sample_code": "import pandas as pd\nfrom datetime import datetime, timedelta\ndf = pd.read_csv('customers.csv')\ntoday = datetime.now()\ndf['次回連絡日'] = today + timedelta(days=30)\ndf.to_excel('followup_schedule.xlsx', index=False)\nprint('フォローアップ予定作成完了！')",
        "libraries": "pandas、datetime",
        "explanation": "顧客フォローアップを自動化。営業機会の逃しを防止。",
        "benefits": ["営業機会確保", "自動化", "顧客満足度向上"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで顧客フォローアップ自動化のコードを作成してください。以下の条件でお願いします：\n\n1. pandasとdatetimeライブラリを使う\n2. CSVファイルの顧客データを読み込む\n3. 最終連絡日から次回フォローアップ日を計算する\n4. フォローアップ予定表をExcelで作成する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（顧客名、最終連絡日、重要度）\n出力形式: Excelファイル（followup_schedule.xlsx）\n機能: 次回連絡日計算、優先度設定、スケジュール管理\n\nコピペ用プロンプト:\nPythonで顧客フォローアップ自動化のコードを作成してください。pandasとdatetimeライブラリを使ってCSVファイルの顧客データを読み込み、最終連絡日から次回フォローアップ日を計算してフォローアップ予定表をExcelで作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 43,
        "category": "スタッフ管理",
        "number": "43/100",
        "title": "社員評価自動集計",
        "desc": "社員評価データを自動で集計・レポート化",
        "how_to": "CSV評価データを自動で集計し、社員別評価レポートを作成します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('evaluations.csv')\nresults = df.groupby('社員名')['評価点'].mean()\nresults.to_excel('evaluation_report.xlsx')\nprint('評価集計完了！')",
        "libraries": "pandas",
        "explanation": "社員評価を自動で集計。人事評価も楽に。",
        "benefits": ["評価が楽", "Excel化", "人事評価に活用"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社員評価自動集計のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの評価データを読み込む\n3. 社員別・項目別の評価を集計する\n4. 評価レポートをExcelで作成する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（社員名、評価項目、評価点、評価者）\n出力形式: Excelファイル（evaluation_report.xlsx）\n集計項目: 社員別平均点、項目別評価、評価者別集計\n\nコピペ用プロンプト:\nPythonで社員評価自動集計のコードを作成してください。pandasライブラリを使ってCSVファイルの評価データを読み込み、社員別・項目別の評価を集計して評価レポートをExcelで作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 44,
        "category": "データ処理・分析",
        "number": "44/100",
        "title": "売上予測自動分析",
        "desc": "過去データから売上を自動で予測・分析",
        "how_to": "過去の売上データから将来の売上を自動で予測します。",
        "sample_code": "import pandas as pd\nimport numpy as np\ndf = pd.read_csv('sales_history.csv')\n# 簡単な移動平均で予測\nprediction = df['売上'].rolling(window=3).mean().iloc[-1]\nprint(f'予測売上: {prediction:,.0f}円')",
        "libraries": "pandas、numpy",
        "explanation": "売上を自動で予測。経営計画や予算策定に活用。",
        "benefits": ["予測が楽", "経営計画に活用", "予算策定に活用"],
        "time_required": "1時間〜2時間",
        "difficulty": "中級",
        "ai_prompt": "Pythonで売上予測自動分析のコードを作成してください。以下の条件でお願いします：\n\n1. pandasとnumpyライブラリを使う\n2. CSVファイルの過去売上データを読み込む\n3. 時系列分析で売上傾向を分析する\n4. 移動平均や季節性を考慮した予測を行う\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（日付、売上金額）\n出力形式: Excelファイル（sales_forecast.xlsx）\n予測項目: 月次売上予測、成長率予測、信頼区間\n\nコピペ用プロンプト:\nPythonで売上予測自動分析のコードを作成してください。pandasとnumpyライブラリを使ってCSVファイルの過去売上データを読み込み、時系列分析で売上傾向を分析して移動平均や季節性を考慮した予測を行うコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 45,
        "category": "文書作成・管理",
        "number": "45/100",
        "title": "プレゼン資料自動生成",
        "desc": "データからプレゼン資料を自動生成・PDF化",
        "how_to": "CSVデータからプレゼン資料を自動生成し、PDF化します。",
        "sample_code": "from reportlab.pdfgen import canvas\nfrom reportlab.lib.pagesizes import letter\nc = canvas.Canvas('presentation.pdf', pagesize=letter)\nc.drawString(100, 750, '売上レポート')\nc.drawString(100, 700, '2024年7月')\nc.drawString(100, 650, '総売上: 1,000,000円')\nc.save()\nprint('プレゼン資料作成完了！')",
        "libraries": "reportlab",
        "explanation": "プレゼン資料を自動で生成。会議準備も楽に。",
        "benefits": ["資料作成が楽", "PDF化", "時短"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonでプレゼン資料自動生成のコードを作成してください。以下の条件でお願いします：\n\n1. reportlabライブラリを使う\n2. CSVファイルのデータを読み込む\n3. プレゼン資料の基本構成を設定する\n4. グラフや表を含むスライドを作成する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（売上データ、顧客データ）\n出力形式: PDFファイル（presentation.pdf）\n資料項目: タイトル、概要、データ分析、グラフ、結論\n\nコピペ用プロンプト:\nPythonでプレゼン資料自動生成のコードを作成してください。reportlabライブラリを使ってCSVファイルのデータを読み込み、プレゼン資料の基本構成を設定してグラフや表を含むスライドを作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 46,
        "category": "データ処理・分析",
        "number": "46/100",
        "title": "競合分析自動化",
        "desc": "競合情報を自動で収集・分析",
        "how_to": "Webスクレイピングで競合情報を自動収集し、分析します。",
        "sample_code": "import requests\nfrom bs4 import BeautifulSoup\nurl = 'https://example.com'\nresponse = requests.get(url)\nsoup = BeautifulSoup(response.text, 'html.parser')\ntitle = soup.find('title').text\nprint(f'競合サイト: {title}')",
        "libraries": "requests、BeautifulSoup",
        "explanation": "競合情報を自動で収集。市場分析も楽に。",
        "benefits": ["情報収集が楽", "自動化", "市場分析に活用"],
        "time_required": "1時間〜2時間",
        "difficulty": "中級",
        "ai_prompt": "Pythonで競合分析自動化のコードを作成してください。以下の条件でお願いします：\n\n1. requestsとBeautifulSoupライブラリを使う\n2. 指定した競合サイトの情報を収集する\n3. 商品情報、価格、特徴を抽出する\n4. 競合分析レポートをExcelで作成する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n対象サイト: 競合企業のWebサイト\n出力形式: Excelファイル（competitor_analysis.xlsx）\n分析項目: 商品情報、価格、特徴、強み・弱み\n\nコピペ用プロンプト:\nPythonで競合分析自動化のコードを作成してください。requestsとBeautifulSoupライブラリを使って指定した競合サイトの情報を収集し、商品情報、価格、特徴を抽出して競合分析レポートをExcelで作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 47,
        "category": "スタッフ管理",
        "number": "47/100",
        "title": "社員研修計画自動化",
        "desc": "社員のスキルに基づいて研修計画を自動生成",
        "how_to": "社員のスキルデータから研修計画を自動で生成します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('employee_skills.csv')\nlow_skills = df[df['スキルレベル'] == '初級']\nplan = low_skills.groupby('スキル名').size()\nplan.to_excel('training_plan.xlsx')\nprint('研修計画作成完了！')",
        "libraries": "pandas",
        "explanation": "研修計画を自動で生成。人材育成も効率的に。",
        "benefits": ["人材育成が楽", "Excel化", "効率的"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社員研修計画自動化のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの社員スキルデータを読み込む\n3. スキルレベルが低い項目を特定する\n4. 研修優先度とスケジュールを設定する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（社員名、スキル名、スキルレベル）\n出力形式: Excelファイル（training_plan.xlsx）\n計画項目: 研修科目、対象者、優先度、スケジュール\n\nコピペ用プロンプト:\nPythonで社員研修計画自動化のコードを作成してください。pandasライブラリを使ってCSVファイルの社員スキルデータを読み込み、スキルレベルが低い項目を特定して研修優先度とスケジュールを設定するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    # ... ここにid:48〜100のツールを順次追加 ...
]

EXTRA_TOOLS += [
    {
        "id": 48,
        "category": "スタッフ管理",
        "number": "48/100",
        "title": "社員名簿自動作成",
        "desc": "社員情報を自動で名簿化・Excel保存",
        "how_to": "CSVや手入力データから社員名簿を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'氏名': '山田太郎', '部署': '営業', '電話': '090-xxxx'},\n    {'氏名': '佐藤花子', '部署': '総務', '電話': '080-xxxx'}\n]\npd.DataFrame(data).to_excel('meibo.xlsx', index=False)\nprint('名簿作成完了！')",
        "libraries": "pandas",
        "explanation": "社員名簿を自動で作成。管理・配布が簡単に。",
        "benefits": ["手入力不要", "Excel化", "管理が楽"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社員名簿自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. 社員情報（氏名、部署、入社日、メールアドレス）を管理する\n3. 新しい社員を追加する機能を含める\n4. 社員情報をExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n管理項目: 氏名、部署、入社日、メールアドレス\n出力形式: Excelファイル（employee_list.xlsx）\n機能: 社員追加、一覧表示、Excel保存\n\nコピペ用プロンプト:\nPythonで社員名簿自動作成のコードを作成してください。pandasライブラリを使って社員情報（氏名、部署、入社日、メールアドレス）を管理し、新しい社員を追加する機能を含めてExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 49,
        "category": "スタッフ管理",
        "number": "49/100",
        "title": "勤怠打刻データ自動集計",
        "desc": "勤怠打刻データを自動で集計・レポート化",
        "how_to": "CSV勤怠データを自動で集計し、月次レポートを作成します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('kintai.csv')\nreport = df.groupby('氏名')['勤務時間'].sum()\nprint(report)\nreport.to_csv('kintai_report.csv')",
        "libraries": "pandas",
        "explanation": "勤怠集計を自動化。月次レポートも一発で。",
        "benefits": ["集計ミス防止", "時短", "自動化"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで勤怠打刻データ自動集計のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの勤怠打刻データを読み込む\n3. 社員別・日別の勤務時間を計算する\n4. 月次レポート（総勤務時間、残業時間、遅刻回数）を作成する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（社員ID、日付、出勤時刻、退勤時刻）\n出力形式: Excelファイル（monthly_report.xlsx）\n集計項目: 総勤務時間、残業時間、遅刻回数\n\nコピペ用プロンプト:\nPythonで勤怠打刻データ自動集計のコードを作成してください。pandasライブラリを使ってCSVファイルの勤怠打刻データを読み込み、社員別・日別の勤務時間を計算して月次レポート（総勤務時間、残業時間、遅刻回数）を作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 50,
        "category": "文書作成・管理",
        "number": "50/100",
        "title": "会議議事録自動フォーマット",
        "desc": "議事録を自動でフォーマット・保存",
        "how_to": "議事録テキストを自動でフォーマットし、ファイル保存します。",
        "sample_code": "title = '営業会議'\ndate = '2024/7/10'\ncontent = '・売上報告\n・新規案件'\nminutes = f'【{title}】\\n日付: {date}\\n内容:\\n{content}'\nwith open('minutes.txt', 'w', encoding='utf-8') as f:\n    f.write(minutes)\nprint('議事録保存完了！')",
        "libraries": "標準ライブラリのみ",
        "explanation": "議事録を自動でフォーマット。誰でもきれいな議事録が作れる。",
        "benefits": ["フォーマット統一", "時短", "誰でも使える"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで会議議事録自動フォーマットのコードを作成してください。以下の条件でお願いします：\n\n1. 標準ライブラリ（datetime、os）を使う\n2. 議事録の基本情報（会議名、日時、参加者、議題）を設定する\n3. 議事内容を自動でフォーマットする\n4. 決定事項とアクションアイテムを整理する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力情報: 会議名、日時、参加者、議題、議事内容\n出力形式: テキストファイル（minutes_YYYYMMDD.txt）\nフォーマット: 見やすい議事録形式\n\nコピペ用プロンプト:\nPythonで会議議事録自動フォーマットのコードを作成してください。標準ライブラリ（datetime、os）を使って議事録の基本情報（会議名、日時、参加者、議題）を設定し、議事内容を自動でフォーマットして決定事項とアクションアイテムを整理するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 51,
        "category": "顧客管理",
        "number": "51/100",
        "title": "顧客アンケート自動集計",
        "desc": "アンケート結果を自動で集計・グラフ化",
        "how_to": "CSVアンケートデータを自動で集計し、グラフも作成します。",
        "sample_code": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('survey.csv')\ncounts = df['満足度'].value_counts()\ncounts.plot(kind='bar')\nplt.savefig('survey_chart.png')\nprint('集計・グラフ作成完了！')",
        "libraries": "pandas、matplotlib",
        "explanation": "アンケート集計・グラフ化を自動化。報告書作成も楽に。",
        "benefits": ["集計が楽", "グラフも自動", "報告書作成時短"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで顧客アンケート自動集計のコードを作成してください。以下の条件でお願いします：\n\n1. pandasとmatplotlibライブラリを使う\n2. CSVファイルのアンケート結果を読み込む\n3. 回答者数、平均評価、満足度分布を集計する\n4. 年齢別・性別の分析を行う\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（年齢、性別、評価、コメント）\n出力形式: Excelファイル（survey_results.xlsx）とグラフ画像\n集計項目: 回答者数、平均評価、満足度分布、年齢別・性別分析\n\nコピペ用プロンプト:\nPythonで顧客アンケート自動集計のコードを作成してください。pandasとmatplotlibライブラリを使ってCSVファイルのアンケート結果を読み込み、回答者数、平均評価、満足度分布を集計して年齢別・性別の分析を行うコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 52,
        "category": "在庫管理",
        "number": "52/100",
        "title": "商品在庫リスト自動更新",
        "desc": "商品在庫リストを自動で最新化",
        "how_to": "CSV在庫データを自動で更新・保存します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('zaiko.csv')\ndf['在庫数'] += 10\ndf.to_csv('zaiko_updated.csv', index=False)\nprint('在庫リスト更新完了！')",
        "libraries": "pandas",
        "explanation": "在庫リストを自動で最新化。棚卸しや発注も楽に。",
        "benefits": ["在庫管理が楽", "ミス防止", "自動化"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで商品在庫リスト自動更新のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの商品在庫データを読み込む\n3. 入荷・出荷データを反映して在庫数を更新する\n4. 在庫不足の商品を検出して警告を表示する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（商品ID、商品名、在庫数、単価）\n更新データ: 入荷・出荷情報\n出力形式: Excelファイル（updated_inventory.xlsx）\n機能: 在庫更新、不足警告、在庫レポート\n\nコピペ用プロンプト:\nPythonで商品在庫リスト自動更新のコードを作成してください。pandasライブラリを使ってCSVファイルの商品在庫データを読み込み、入荷・出荷データを反映して在庫数を更新し、在庫不足の商品を検出して警告を表示するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 53,
        "category": "顧客管理",
        "number": "53/100",
        "title": "取引先連絡先自動リスト化",
        "desc": "取引先の連絡先を自動でリスト化・Excel保存",
        "how_to": "CSV取引先データから連絡先リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('clients.csv')\ndf[['会社名', '担当者', '電話', 'メール']].to_excel('contacts.xlsx', index=False)\nprint('連絡先リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "取引先連絡先を自動でリスト化。電話・メールもすぐ探せる。",
        "benefits": ["連絡が楽", "Excel化", "管理が簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先連絡先自動リスト化のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの取引先情報を読み込む\n3. 取引先名、担当者、電話番号、メールアドレスを整理する\n4. 取引先別にグループ化してExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（取引先名、担当者、電話番号、メールアドレス）\n出力形式: Excelファイル（client_contacts.xlsx）\n整理項目: 取引先名、担当者、連絡先情報\n\nコピペ用プロンプト:\nPythonで取引先連絡先自動リスト化のコードを作成してください。pandasライブラリを使ってCSVファイルの取引先情報（取引先名、担当者、電話番号、メールアドレス）を読み込み、取引先別にグループ化してExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 54,
        "category": "在庫管理",
        "number": "54/100",
        "title": "受発注履歴自動整理",
        "desc": "受発注履歴を自動で日付・取引先別に整理",
        "how_to": "CSV受発注データを日付・取引先別に自動並べ替えします。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('orders.csv')\ndf = df.sort_values(['日付', '取引先'])\ndf.to_csv('orders_sorted.csv', index=False)\nprint('履歴整理完了！')",
        "libraries": "pandas",
        "explanation": "受発注履歴を自動で整理。検索・管理が楽に。",
        "benefits": ["管理が楽", "検索しやすい", "手作業不要"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで受発注履歴自動整理のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの受発注履歴を読み込む\n3. 日付順、取引先別に並べ替える\n4. 月別・取引先別の集計を行う\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（日付、取引先、商品名、数量、金額）\n出力形式: Excelファイル（order_history.xlsx）\n整理項目: 日付順、取引先別、月別集計\n\nコピペ用プロンプト:\nPythonで受発注履歴自動整理のコードを作成してください。pandasライブラリを使ってCSVファイルの受発注履歴（日付、取引先、商品名、数量、金額）を読み込み、日付順・取引先別に並べ替えて月別集計を行うコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 55,
        "category": "スタッフ管理",
        "number": "55/100",
        "title": "研修参加者リスト自動作成",
        "desc": "研修参加者リストを自動でExcel化",
        "how_to": "CSVや手入力データから参加者リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'氏名': '田中一郎', '部署': '営業'},\n    {'氏名': '鈴木二郎', '部署': '開発'}\n]\npd.DataFrame(data).to_excel('kenshu.xlsx', index=False)\nprint('参加者リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "研修参加者リストを自動で作成。配布・管理が簡単に。",
        "benefits": ["手入力不要", "Excel化", "管理が楽"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで研修参加者リスト自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. 研修参加者の基本情報を管理する\n3. 氏名、部署、メールアドレス、参加日時を記録する\n4. 研修別に参加者リストを作成する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n管理項目: 氏名、部署、メールアドレス、参加日時、研修名\n出力形式: Excelファイル（training_participants.xlsx）\n機能: 参加者追加、研修別リスト作成、Excel保存\n\nコピペ用プロンプト:\nPythonで研修参加者リスト自動作成のコードを作成してください。pandasライブラリを使って研修参加者の基本情報（氏名、部署、メールアドレス、参加日時、研修名）を管理し、研修別に参加者リストを作成してExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 56,
        "category": "顧客管理",
        "number": "56/100",
        "title": "年賀状宛名自動印刷用データ作成",
        "desc": "年賀状宛名リストを自動で印刷用データ化",
        "how_to": "CSV住所録から宛名印刷用データを自動で作成します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('address.csv')\ndf[['氏名', '住所', '郵便番号']].to_csv('nenga_print.csv', index=False)\nprint('宛名データ作成完了！')",
        "libraries": "pandas",
        "explanation": "年賀状宛名データを自動で作成。印刷も楽に。",
        "benefits": ["印刷が楽", "手作業不要", "Excel化も簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで年賀状宛名自動印刷用データ作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの顧客情報を読み込む\n3. 宛名、住所、敬称を自動でフォーマットする\n4. 印刷用のレイアウトに整える\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（氏名、住所、敬称）\n出力形式: Excelファイル（newyear_cards.xlsx）\n印刷項目: 宛名、住所、敬称\n\nコピペ用プロンプト:\nPythonで年賀状宛名自動印刷用データ作成のコードを作成してください。pandasライブラリを使ってCSVファイルの顧客情報（氏名、住所、敬称）を読み込み、宛名、住所、敬称を自動でフォーマットして印刷用のレイアウトに整えるコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 57,
        "category": "スタッフ管理",
        "number": "57/100",
        "title": "社内FAQ自動生成",
        "desc": "よくある質問と回答を自動でリスト化",
        "how_to": "Q&Aリストを自動でまとめ、社内FAQを作成します。",
        "sample_code": "faq = [\n    {'質問': 'パスワードを忘れたら？', '回答': 'システム管理者に連絡してください。'},\n    {'質問': '経費申請の締切は？', '回答': '毎月25日です。'}\n]\nfor qa in faq:\n    print(f\"Q: {qa['質問']}\\nA: {qa['回答']}\\n\")",
        "libraries": "標準ライブラリのみ",
        "explanation": "社内FAQを自動で作成。新人教育や問い合わせ対応が楽に。",
        "benefits": ["教育コスト削減", "問い合わせ対応時短", "誰でも使える"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内FAQ自動生成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルのQ&Aリストを読み込む\n3. 質問と回答を整理してFAQ形式にする\n4. 見やすいレイアウトでExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（質問、回答の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで社内FAQ自動生成のコードを作成してください。pandasライブラリを使ってCSVファイルのQ&AリストからFAQを自動生成し、Excelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 58,
        "category": "顧客管理",
        "number": "58/100",
        "title": "顧客誕生日リスト自動作成",
        "desc": "顧客の誕生日リストを自動で作成・Excel保存",
        "how_to": "CSV顧客データから誕生日リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('customers.csv')\ndf[['氏名', '誕生日']].to_excel('birthdays.xlsx', index=False)\nprint('誕生日リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "顧客の誕生日リストを自動で作成。お祝いメールやDM送付に活用。",
        "benefits": ["お祝い対応が楽", "Excel化", "管理が簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで顧客誕生日リスト自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの顧客データを読み込む\n3. 誕生日の列を抽出して整理する\n4. 月別・日別にソートしてExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（氏名、誕生日の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで顧客誕生日リスト自動作成のコードを作成してください。pandasライブラリを使ってCSVファイルから顧客の誕生日リストをExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 59,
        "category": "文書作成・管理",
        "number": "59/100",
        "title": "送付状自動作成",
        "desc": "送付状の定型文を自動生成・PDF化",
        "how_to": "宛先・内容を入力するだけで送付状を自動生成しPDF化します。",
        "sample_code": "from reportlab.pdfgen import canvas\nc = canvas.Canvas('sofujo.pdf')\nc.drawString(100, 750, '送付状')\nc.drawString(100, 700, '株式会社サンプル 御中')\nc.drawString(100, 650, '書類をお送りします。ご査収ください。')\nc.save()\nprint('PDF作成完了！')",
        "libraries": "reportlab",
        "explanation": "送付状を自動でPDF化。手書き・転記不要。",
        "benefits": ["手書き不要", "PDF化", "時短"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで送付状自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. reportlabライブラリを使う\n2. 宛先、送付者、日付、内容を設定する\n3. 見やすいレイアウトでPDFを作成する\n4. フォントサイズや位置を適切に設定する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力情報: 宛先、送付者、日付、内容\n出力形式: PDFファイル\n\nコピペ用プロンプト:\nPythonで送付状自動作成のコードを作成してください。reportlabライブラリを使って宛先・内容からPDF送付状を自動生成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 60,
        "category": "データ処理・分析",
        "number": "60/100",
        "title": "取引先別売上自動集計",
        "desc": "取引先ごとの売上を自動で集計・グラフ化",
        "how_to": "CSV売上データを取引先ごとに自動集計し、グラフも作成します。",
        "sample_code": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('sales.csv')\ncounts = df.groupby('取引先')['金額'].sum()\ncounts.plot(kind='bar')\nplt.savefig('sales_by_client.png')\nprint('集計・グラフ作成完了！')",
        "libraries": "pandas、matplotlib",
        "explanation": "取引先別売上を自動で集計・グラフ化。営業戦略に活用。",
        "benefits": ["集計が楽", "グラフも自動", "戦略立案に活用"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先別売上自動集計のコードを作成してください。以下の条件でお願いします：\n\n1. pandasとmatplotlibライブラリを使う\n2. CSVファイルの売上データを読み込む\n3. 取引先別に売上を集計する\n4. 棒グラフや円グラフで可視化する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（取引先、売上金額の列）\n出力形式: グラフ画像ファイル\n\nコピペ用プロンプト:\nPythonで取引先別売上自動集計のコードを作成してください。pandasとmatplotlibライブラリを使ってCSVファイルから取引先別に売上を集計・グラフ作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 61,
        "category": "データ処理・分析",
        "number": "61/100",
        "title": "社内アンケート自動集計",
        "desc": "社内アンケート結果を自動で集計・グラフ化",
        "how_to": "CSVアンケートデータを自動で集計し、グラフも作成します。",
        "sample_code": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('survey.csv')\ncounts = df['満足度'].value_counts()\ncounts.plot(kind='pie', autopct='%1.1f%%')\nplt.savefig('survey_pie.png')\nprint('集計・グラフ作成完了！')",
        "libraries": "pandas、matplotlib",
        "explanation": "社内アンケート集計・グラフ化を自動化。報告書作成も楽に。",
        "benefits": ["集計が楽", "グラフも自動", "報告書作成時短"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内アンケート自動集計のコードを作成してください。以下の条件でお願いします：\n\n1. pandasとmatplotlibライブラリを使う\n2. CSVファイルのアンケート結果を読み込む\n3. 回答者数、平均評価、満足度分布を集計する\n4. 円グラフや棒グラフで可視化する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（回答者、評価、満足度の列）\n出力形式: グラフ画像ファイル\n\nコピペ用プロンプト:\nPythonで社内アンケート自動集計のコードを作成してください。pandasとmatplotlibライブラリを使ってCSVファイルから社内アンケートを集計・グラフ作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 62,
        "category": "データ処理・分析",
        "number": "62/100",
        "title": "交通費ICカード明細自動整理",
        "desc": "ICカード明細を自動で整理・Excel化",
        "how_to": "ICカード明細CSVを自動で整理し、Excelに保存します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('iccard.csv')\ndf = df.sort_values('利用日')\ndf.to_excel('iccard_sorted.xlsx', index=False)\nprint('明細整理完了！')",
        "libraries": "pandas",
        "explanation": "ICカード明細を自動で整理。経費精算も楽に。",
        "benefits": ["整理が楽", "Excel化", "経費精算も簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで交通費ICカード明細自動整理のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルのICカード明細を読み込む\n3. 利用日でソートして整理する\n4. 月別・日別に集計してExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（利用日、利用額、利用駅の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで交通費ICカード明細自動整理のコードを作成してください。pandasライブラリを使ってCSVファイルを日付順に並べ替えてExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 63,
        "category": "ファイル管理",
        "number": "63/100",
        "title": "画像ファイル自動圧縮",
        "desc": "画像ファイルを自動で圧縮・保存",
        "how_to": "Pillowで画像ファイルを自動で圧縮し、保存します。",
        "sample_code": "from PIL import Image\nimport os\nimg = Image.open('photo.jpg')\nimg.save('photo_compressed.jpg', quality=60)\nprint('圧縮保存完了！')",
        "libraries": "Pillow",
        "explanation": "画像ファイルを自動で圧縮。メール添付やWeb掲載も楽に。",
        "benefits": ["ファイルサイズ削減", "メール添付が楽", "Web掲載も簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで画像ファイル自動圧縮のコードを作成してください。以下の条件でお願いします：\n\n1. Pillowライブラリを使う\n2. 指定したフォルダ内の画像ファイルを読み込む\n3. 画質を調整して圧縮する\n4. 元ファイルは残して新しいファイル名で保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n対象ファイル: JPG、PNG、BMPファイル\n出力形式: 圧縮された画像ファイル\n\nコピペ用プロンプト:\nPythonで画像ファイル自動圧縮のコードを作成してください。Pillowライブラリを使って画像ファイルを自動圧縮して保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 64,
        "category": "文書作成・管理",
        "number": "64/100",
        "title": "取引先別請求書自動作成",
        "desc": "取引先ごとの請求書を自動でPDF化",
        "how_to": "取引先名・金額を入力するだけで請求書PDFを自動作成します。",
        "sample_code": "from reportlab.pdfgen import canvas\nc = canvas.Canvas('invoice.pdf')\nc.drawString(100, 750, '請求書')\nc.drawString(100, 700, '株式会社サンプル 御中')\nc.drawString(100, 650, '金額: 100,000円')\nc.save()\nprint('PDF作成完了！')",
        "libraries": "reportlab",
        "explanation": "請求書を自動でPDF化。手書き・転記不要。",
        "benefits": ["手書き不要", "PDF化", "時短"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先別請求書自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. reportlabライブラリを使う\n2. 取引先名、商品名、数量、単価を設定する\n3. 小計、消費税、合計金額を計算する\n4. 見やすいレイアウトでPDFを作成する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力情報: 取引先名、商品名、数量、単価\n出力形式: PDFファイル\n\nコピペ用プロンプト:\nPythonで取引先別請求書自動作成のコードを作成してください。reportlabライブラリを使って取引先名・金額からPDF請求書を自動生成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 65,
        "category": "スタッフ管理",
        "number": "65/100",
        "title": "社員連絡網自動生成",
        "desc": "社員連絡網を自動でExcel化",
        "how_to": "CSVや手入力データから社員連絡網を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'氏名': '山田太郎', '電話': '090-xxxx', 'メール': 'yamada@example.com'},\n    {'氏名': '佐藤花子', '電話': '080-xxxx', 'メール': 'sato@example.com'}\n]\npd.DataFrame(data).to_excel('renrakumou.xlsx', index=False)\nprint('連絡網作成完了！')",
        "libraries": "pandas",
        "explanation": "社員連絡網を自動で作成。配布・管理が簡単に。",
        "benefits": ["手入力不要", "Excel化", "管理が楽"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社員連絡網自動生成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. 社員の基本情報（氏名、部署、電話番号、メールアドレス）を管理する\n3. 部署別にグループ化して整理する\n4. 見やすいレイアウトでExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n管理項目: 氏名、部署、電話番号、メールアドレス\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで社員連絡網自動生成のコードを作成してください。pandasライブラリを使って社員情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 66,
        "category": "文書作成・管理",
        "number": "66/100",
        "title": "取引先別納品書自動作成",
        "desc": "取引先ごとの納品書を自動でPDF化",
        "how_to": "取引先名・商品名・数量を入力するだけで納品書PDFを自動作成します。",
        "sample_code": "from reportlab.pdfgen import canvas\nc = canvas.Canvas('delivery.pdf')\nc.drawString(100, 750, '納品書')\nc.drawString(100, 700, '株式会社サンプル 御中')\nc.drawString(100, 650, '商品: 商品A 数量: 10')\nc.save()\nprint('PDF作成完了！')",
        "libraries": "reportlab",
        "explanation": "納品書を自動でPDF化。手書き・転記不要。",
        "benefits": ["手書き不要", "PDF化", "時短"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先別納品書自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. reportlabライブラリを使う\n2. 取引先名、商品名、数量、納品日を設定する\n3. 納品書番号を自動生成する\n4. 見やすいレイアウトでPDFを作成する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力情報: 取引先名、商品名、数量、納品日\n出力形式: PDFファイル\n\nコピペ用プロンプト:\nPythonで取引先別納品書自動作成のコードを作成してください。reportlabライブラリを使って取引先名・商品名・数量からPDF納品書を自動生成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 67,
        "category": "スタッフ管理",
        "number": "67/100",
        "title": "社内イベント出欠リスト自動作成",
        "desc": "社内イベントの出欠リストを自動でExcel化",
        "how_to": "CSVや手入力データから出欠リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'氏名': '山田太郎', '出欠': '出席'},\n    {'氏名': '佐藤花子', '出欠': '欠席'}\n]\npd.DataFrame(data).to_excel('event.xlsx', index=False)\nprint('出欠リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "社内イベントの出欠リストを自動で作成。配布・管理が簡単に。",
        "benefits": ["手入力不要", "Excel化", "管理が楽"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内イベント出欠リスト自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. イベント名、参加者名、出欠状況を管理する\n3. 出欠状況を集計して統計を表示する\n4. 見やすいレイアウトでExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n管理項目: イベント名、参加者名、出欠状況\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで社内イベント出欠リスト自動作成のコードを作成してください。pandasライブラリを使って出欠情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
]

EXTRA_TOOLS += [
    {
        "id": 68,
        "category": "顧客管理",
        "number": "68/100",
        "title": "顧客来店履歴自動集計",
        "desc": "顧客の来店履歴を自動で集計・Excel保存",
        "how_to": "CSV来店データから顧客ごとの来店回数を自動集計しExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('visit.csv')\ncounts = df['氏名'].value_counts()\ncounts.to_excel('visit_counts.xlsx')\nprint('来店履歴集計完了！')",
        "libraries": "pandas",
        "explanation": "顧客の来店履歴を自動で集計。リピーター分析や販促に活用。",
        "benefits": ["リピーター分析", "Excel化", "販促に活用"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで顧客来店履歴自動集計のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの来店データを読み込む\n3. 顧客別に来店回数を集計する\n4. 来店頻度で顧客をランク付けする\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（顧客名、来店日の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで顧客来店履歴自動集計のコードを作成してください。pandasライブラリを使ってCSVファイルから顧客来店履歴を集計してExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 69,
        "category": "スタッフ管理",
        "number": "69/100",
        "title": "社内備品管理リスト自動作成",
        "desc": "社内備品の管理リストを自動でExcel化",
        "how_to": "CSVや手入力データから備品管理リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'備品名': 'ノートPC', '台数': 10, '管理者': '山田'},\n    {'備品名': 'プロジェクター', '台数': 2, '管理者': '佐藤'}\n]\npd.DataFrame(data).to_excel('bihin.xlsx', index=False)\nprint('備品リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "社内備品の管理リストを自動で作成。棚卸しや管理が楽に。",
        "benefits": ["棚卸しが楽", "Excel化", "管理が簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内備品管理リスト自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. 備品名、台数、管理者、購入日を管理する\n3. 備品別に在庫状況を表示する\n4. 見やすいレイアウトでExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n管理項目: 備品名、台数、管理者、購入日\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで社内備品管理リスト自動作成のコードを作成してください。pandasライブラリを使って備品情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 70,
        "category": "データ処理・分析",
        "number": "70/100",
        "title": "取引先別支払予定表自動作成",
        "desc": "取引先ごとの支払予定表を自動でExcel化",
        "how_to": "CSV支払データから取引先別の支払予定表を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('payments.csv')\ndf = df.sort_values(['取引先', '支払日'])\ndf.to_excel('payments_schedule.xlsx', index=False)\nprint('支払予定表作成完了！')",
        "libraries": "pandas",
        "explanation": "取引先別の支払予定表を自動で作成。資金繰り管理も楽に。",
        "benefits": ["資金繰り管理", "Excel化", "管理が簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先別支払予定表自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの支払データを読み込む\n3. 取引先別に支払予定を整理する\n4. 支払日順にソートしてExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（取引先、支払日、金額の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで取引先別支払予定表自動作成のコードを作成してください。pandasライブラリを使ってCSVファイルから取引先別支払予定表をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 71,
        "category": "スタッフ管理",
        "number": "71/100",
        "title": "社員健康診断リスト自動整理",
        "desc": "社員健康診断リストを自動で整理・Excel化",
        "how_to": "CSV健康診断データを自動で整理しExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('health.csv')\ndf = df.sort_values('氏名')\ndf.to_excel('health_sorted.xlsx', index=False)\nprint('健康診断リスト整理完了！')",
        "libraries": "pandas",
        "explanation": "社員健康診断リストを自動で整理。管理・配布が簡単に。",
        "benefits": ["管理が楽", "Excel化", "配布も簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社員健康診断リスト自動整理のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの健康診断データを読み込む\n3. 氏名順にソートして整理する\n4. 部署別にグループ化してExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（氏名、部署、健康診断日の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで社員健康診断リスト自動整理のコードを作成してください。pandasライブラリを使ってCSVファイルを氏名順に並べ替えてExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 72,
        "category": "文書作成・管理",
        "number": "72/100",
        "title": "取引先別契約書リスト自動生成",
        "desc": "取引先ごとの契約書リストを自動でExcel化",
        "how_to": "CSV契約書データから取引先別の契約書リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('contracts.csv')\ndf = df.sort_values(['取引先', '契約日'])\ndf.to_excel('contracts_list.xlsx', index=False)\nprint('契約書リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "取引先別契約書リストを自動で作成。管理・検索が楽に。",
        "benefits": ["管理が楽", "Excel化", "検索も簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先別契約書リスト自動生成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの契約書データを読み込む\n3. 取引先別に契約書を整理する\n4. 契約日順にソートしてExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（取引先、契約日、契約内容の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで取引先別契約書リスト自動生成のコードを作成してください。pandasライブラリを使ってCSVファイルから取引先別契約書リストをExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 73,
        "category": "スタッフ管理",
        "number": "73/100",
        "title": "社内回覧板自動作成",
        "desc": "社内回覧板を自動でExcel化",
        "how_to": "CSVや手入力データから回覧板リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'氏名': '山田太郎', '確認日': '2024/7/10'},\n    {'氏名': '佐藤花子', '確認日': '2024/7/11'}\n]\npd.DataFrame(data).to_excel('kairan.xlsx', index=False)\nprint('回覧板作成完了！')",
        "libraries": "pandas",
        "explanation": "社内回覧板を自動で作成。配布・管理が簡単に。",
        "benefits": ["手入力不要", "Excel化", "管理が楽"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内回覧板自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. 回覧文書名、確認者、確認日を管理する\n3. 確認状況を集計して統計を表示する\n4. 見やすいレイアウトでExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n管理項目: 回覧文書名、確認者、確認日\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで社内回覧板自動作成のコードを作成してください。pandasライブラリを使って回覧情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 74,
        "category": "顧客管理",
        "number": "74/100",
        "title": "顧客問い合わせ履歴自動整理",
        "desc": "顧客問い合わせ履歴を自動で整理・Excel化",
        "how_to": "CSV問い合わせデータを自動で整理しExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('inquiry.csv')\ndf = df.sort_values(['氏名', '日付'])\ndf.to_excel('inquiry_sorted.xlsx', index=False)\nprint('問い合わせ履歴整理完了！')",
        "libraries": "pandas",
        "explanation": "顧客問い合わせ履歴を自動で整理。対応漏れ防止や分析に活用。",
        "benefits": ["対応漏れ防止", "Excel化", "分析に活用"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで顧客問い合わせ履歴自動整理のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの問い合わせデータを読み込む\n3. 氏名・日付順にソートして整理する\n4. 問い合わせ内容別に分類してExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（氏名、日付、問い合わせ内容の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで顧客問い合わせ履歴自動整理のコードを作成してください。pandasライブラリを使ってCSVファイルを氏名・日付順に並べ替えてExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 75,
        "category": "スタッフ管理",
        "number": "75/100",
        "title": "社員スキルマップ自動作成",
        "desc": "社員スキルマップを自動でExcel化",
        "how_to": "CSVや手入力データからスキルマップを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'氏名': '山田太郎', 'スキル': 'Python, Excel'},\n    {'氏名': '佐藤花子', 'スキル': '営業, PowerPoint'}\n]\npd.DataFrame(data).to_excel('skillmap.xlsx', index=False)\nprint('スキルマップ作成完了！')",
        "libraries": "pandas",
        "explanation": "社員スキルマップを自動で作成。人材配置や教育に活用。",
        "benefits": ["人材配置に活用", "Excel化", "教育計画も簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社員スキルマップ自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. 社員名、スキル名、レベル、取得日を管理する\n3. スキル別・レベル別に集計する\n4. 見やすいレイアウトでExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n管理項目: 社員名、スキル名、レベル、取得日\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで社員スキルマップ自動作成のコードを作成してください。pandasライブラリを使ってスキル情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 76,
        "category": "文書作成・管理",
        "number": "76/100",
        "title": "取引先別見積書自動作成",
        "desc": "取引先ごとの見積書を自動でPDF化",
        "how_to": "取引先名・商品名・金額を入力するだけで見積書PDFを自動作成します。",
        "sample_code": "from reportlab.pdfgen import canvas\nc = canvas.Canvas('estimate.pdf')\nc.drawString(100, 750, '見積書')\nc.drawString(100, 700, '株式会社サンプル 御中')\nc.drawString(100, 650, '商品: 商品A 金額: 50,000円')\nc.save()\nprint('PDF作成完了！')",
        "libraries": "reportlab",
        "explanation": "見積書を自動でPDF化。手書き・転記不要。",
        "benefits": ["手書き不要", "PDF化", "時短"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先別見積書自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. reportlabライブラリを使う\n2. 取引先名、商品名、数量、単価を設定する\n3. 小計、消費税、合計金額を計算する\n4. 見積書番号を自動生成する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力情報: 取引先名、商品名、数量、単価\n出力形式: PDFファイル\n\nコピペ用プロンプト:\nPythonで取引先別見積書自動作成のコードを作成してください。reportlabライブラリを使って取引先名・商品名・金額からPDF見積書を自動生成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 77,
        "category": "スタッフ管理",
        "number": "77/100",
        "title": "社内プロジェクト進捗表自動作成",
        "desc": "社内プロジェクト進捗表を自動でExcel化",
        "how_to": "CSVや手入力データから進捗表を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'プロジェクト名': '新商品開発', '進捗': '50%'},\n    {'プロジェクト名': 'Webリニューアル', '進捗': '80%'}\n]\npd.DataFrame(data).to_excel('progress.xlsx', index=False)\nprint('進捗表作成完了！')",
        "libraries": "pandas",
        "explanation": "社内プロジェクト進捗表を自動で作成。進捗管理や報告が楽に。",
        "benefits": ["進捗管理が楽", "Excel化", "報告も簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内プロジェクト進捗表自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. プロジェクト名、担当者、進捗率、期限を管理する\n3. 進捗率でプロジェクトを分類する\n4. 見やすいレイアウトでExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n管理項目: プロジェクト名、担当者、進捗率、期限\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで社内プロジェクト進捗表自動作成のコードを作成してください。pandasライブラリを使って進捗情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 78,
        "category": "スタッフ管理",
        "number": "78/100",
        "title": "社内イベント出欠管理表自動作成",
        "desc": "社内イベントの出欠管理表を自動でExcel化",
        "how_to": "CSVや手入力データから出欠管理表を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'氏名': '山田太郎', '出欠': '出席'},\n    {'氏名': '佐藤花子', '出欠': '未定'}\n]\npd.DataFrame(data).to_excel('event_attendance.xlsx', index=False)\nprint('出欠管理表作成完了！')",
        "libraries": "pandas",
        "explanation": "社内イベントの出欠管理表を自動で作成。配布・管理が簡単に。",
        "benefits": ["手入力不要", "Excel化", "管理が楽"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内イベント出欠管理表自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. イベント名、参加者名、出欠状況、回答日を管理する\n3. 出欠状況を集計して統計を表示する\n4. 見やすいレイアウトでExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n管理項目: イベント名、参加者名、出欠状況、回答日\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで社内イベント出欠管理表自動作成のコードを作成してください。pandasライブラリを使って出欠情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 79,
        "category": "顧客管理",
        "number": "79/100",
        "title": "顧客アンケート集計",
        "desc": "顧客アンケート結果を自動で集計・グラフ化",
        "how_to": "CSVアンケートデータを自動で集計し、グラフも作成します。",
        "sample_code": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('customer_survey.csv')\ncounts = df['評価'].value_counts()\ncounts.plot(kind='bar')\nplt.savefig('customer_survey_chart.png')\nprint('集計・グラフ作成完了！')",
        "libraries": "pandas、matplotlib",
        "explanation": "顧客アンケート集計・グラフ化を自動化。報告書作成も楽に。",
        "benefits": ["集計が楽", "グラフも自動", "報告書作成時短"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで顧客アンケート集計のコードを作成してください。以下の条件でお願いします：\n\n1. pandasとmatplotlibライブラリを使う\n2. CSVファイルの顧客アンケート結果を読み込む\n3. 回答者数、平均評価、満足度分布を集計する\n4. 年齢別・性別の分析を行う\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（年齢、性別、評価、満足度の列）\n出力形式: グラフ画像ファイル\n\nコピペ用プロンプト:\nPythonで顧客アンケート集計のコードを作成してください。pandasとmatplotlibライブラリを使ってCSVファイルから顧客アンケートを集計・グラフ作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 80,
        "category": "データ処理・分析",
        "number": "80/100",
        "title": "交通費精算書自動作成",
        "desc": "交通費精算書を自動でExcel化",
        "how_to": "CSV交通費データから精算書を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('transport.csv')\ndf.to_excel('transport_expense.xlsx', index=False)\nprint('交通費精算書作成完了！')",
        "libraries": "pandas",
        "explanation": "交通費精算書を自動で作成。経費精算が楽に。",
        "benefits": ["経費精算が楽", "Excel化", "手作業不要"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで交通費精算書自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの交通費データを読み込む\n3. 日付別・路線別に集計する\n4. 合計金額を計算してExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（日付、路線、金額の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで交通費精算書自動作成のコードを作成してください。pandasライブラリを使ってCSVファイルからExcel精算書を作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 81,
        "category": "顧客管理",
        "number": "81/100",
        "title": "取引先連絡先リスト自動生成",
        "desc": "取引先の連絡先リストを自動でExcel化",
        "how_to": "CSV取引先データから連絡先リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('partners.csv')\ndf[['会社名', '担当者', '電話', 'メール']].to_excel('partner_contacts.xlsx', index=False)\nprint('連絡先リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "取引先連絡先を自動でリスト化。電話・メールもすぐ探せる。",
        "benefits": ["連絡が楽", "Excel化", "管理が簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先連絡先リスト自動生成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの取引先データを読み込む\n3. 会社名、担当者、電話番号、メールアドレスを整理する\n4. 取引先別にグループ化してExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（会社名、担当者、電話番号、メールアドレスの列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで取引先連絡先リスト自動生成のコードを作成してください。pandasライブラリを使ってCSVファイルから取引先連絡先リストをExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 82,
        "category": "スタッフ管理",
        "number": "82/100",
        "title": "社員研修履歴リスト自動作成",
        "desc": "社員の研修履歴リストを自動でExcel化",
        "how_to": "CSV研修データから研修履歴リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('training.csv')\ndf.to_excel('training_history.xlsx', index=False)\nprint('研修履歴リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "社員研修履歴リストを自動で作成。教育管理や人事評価に活用。",
        "benefits": ["教育管理が楽", "Excel化", "人事評価に活用"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社員研修履歴リスト自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの研修データを読み込む\n3. 社員別・研修別に履歴を整理する\n4. 研修日順にソートしてExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（社員名、研修名、研修日の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで社員研修履歴リスト自動作成のコードを作成してください。pandasライブラリを使ってCSVファイルから社員研修履歴リストをExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 83,
        "category": "在庫管理",
        "number": "83/100",
        "title": "商品在庫リスト自動更新",
        "desc": "商品在庫リストを自動で最新化",
        "how_to": "CSV在庫データを自動で更新・保存します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('stock.csv')\ndf['在庫数'] += 5\ndf.to_csv('stock_updated.csv', index=False)\nprint('在庫リスト更新完了！')",
        "libraries": "pandas",
        "explanation": "在庫リストを自動で最新化。棚卸しや発注も楽に。",
        "benefits": ["在庫管理が楽", "ミス防止", "自動化"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで商品在庫リスト自動更新のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの在庫データを読み込む\n3. 入荷・出荷データを反映して在庫数を更新する\n4. 在庫不足の商品を検出して警告を表示する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（商品名、現在在庫数、入荷数、出荷数の列）\n出力形式: 更新されたCSVファイル\n\nコピペ用プロンプト:\nPythonで商品在庫リスト自動更新のコードを作成してください。pandasライブラリを使ってCSVファイルの在庫数を自動更新するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 84,
        "category": "在庫管理",
        "number": "84/100",
        "title": "受発注管理表自動作成",
        "desc": "受発注管理表を自動でExcel化",
        "how_to": "CSV受発注データから管理表を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('orders.csv')\ndf.to_excel('order_management.xlsx', index=False)\nprint('受発注管理表作成完了！')",
        "libraries": "pandas",
        "explanation": "受発注管理表を自動で作成。業務効率化・管理が楽に。",
        "benefits": ["業務効率化", "Excel化", "管理が簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで受発注管理表自動作成のコードを作成してください。以下の条件でお願いします：\n\n1. pandasライブラリを使う\n2. CSVファイルの受発注データを読み込む\n3. 日付順・取引先別に整理する\n4. 受注・発注の状況を集計してExcelファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力ファイル: CSVファイル（日付、取引先、商品名、数量、金額の列）\n出力形式: Excelファイル\n\nコピペ用プロンプト:\nPythonで受発注管理表自動作成のコードを作成してください。pandasライブラリを使ってCSVファイルから受発注管理表をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 85,
        "category": "スタッフ管理",
        "number": "85/100",
        "title": "社内FAQ自動生成",
        "desc": "よくある質問と回答を自動でリスト化",
        "how_to": "Q&Aリストを自動でまとめ、社内FAQを作成します。",
        "sample_code": "faq = [\n    {'質問': 'パスワードを忘れたら？', '回答': 'システム管理者に連絡してください。'},\n    {'質問': '経費申請の締切は？', '回答': '毎月25日です。'}\n]\nfor qa in faq:\n    print(f\"Q: {qa['質問']}\\nA: {qa['回答']}\\n\")",
        "libraries": "標準ライブラリのみ",
        "explanation": "社内FAQを自動で作成。新人教育や問い合わせ対応が楽に。",
        "benefits": ["教育コスト削減", "問い合わせ対応時短", "誰でも使える"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内FAQ自動生成のコードを作成してください。以下の条件でお願いします：\n\n1. 標準ライブラリ（辞書、リスト）を使う\n2. Q&Aリストを辞書形式で管理する\n3. 質問と回答を整理してFAQ形式にする\n4. 見やすい形式でテキストファイルに保存する\n5. 初心者でも理解できるようにコメントを詳しく書く\n\n入力データ: Q&Aリスト（質問、回答のペア）\n出力形式: テキストファイル\n\nコピペ用プロンプト:\nPythonで社内FAQ自動生成のコードを作成してください。Q&AリストからFAQを自動生成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 86,
        "category": "スタッフ管理",
        "number": "86/100",
        "title": "休暇申請書自動作成",
        "desc": "休暇申請書を自動でExcel化",
        "how_to": "申請者名・日付・理由を入力するだけで休暇申請書を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'氏名': '山田太郎', '日付': '2024/7/20', '理由': '私用'}\n]\npd.DataFrame(data).to_excel('leave_application.xlsx', index=False)\nprint('休暇申請書作成完了！')",
        "libraries": "pandas",
        "explanation": "休暇申請書を自動で作成。申請・管理が楽に。",
        "benefits": ["申請が楽", "Excel化", "管理が簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで休暇申請書自動作成のコードを作成してください。申請情報をExcelに保存。\n\nコピペ用プロンプト:\nPythonで休暇申請書自動作成のコードを作成してください。pandasライブラリを使って申請情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 87,
        "category": "顧客管理",
        "number": "87/100",
        "title": "取引先評価リスト自動作成",
        "desc": "取引先の評価リストを自動でExcel化",
        "how_to": "CSV評価データから取引先評価リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('partner_evaluation.csv')\ndf.to_excel('partner_evaluation_list.xlsx', index=False)\nprint('評価リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "取引先評価リストを自動で作成。取引先管理や選定に活用。",
        "benefits": ["取引先管理が楽", "Excel化", "選定に活用"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先評価リスト自動作成のコードを作成してください。CSVからExcelリスト作成。\n\nコピペ用プロンプト:\nPythonで取引先評価リスト自動作成のコードを作成してください。pandasライブラリを使ってCSVファイルから取引先評価リストをExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 88,
        "category": "スタッフ管理",
        "number": "88/100",
        "title": "社内備品貸出管理表自動作成",
        "desc": "社内備品の貸出管理表を自動でExcel化",
        "how_to": "CSVや手入力データから備品貸出管理表を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'備品名': 'プロジェクター', '貸出者': '山田太郎', '貸出日': '2024/7/10'},\n    {'備品名': 'ノートPC', '貸出者': '佐藤花子', '貸出日': '2024/7/11'}\n]\npd.DataFrame(data).to_excel('equipment_loan.xlsx', index=False)\nprint('貸出管理表作成完了！')",
        "libraries": "pandas",
        "explanation": "社内備品の貸出管理表を自動で作成。備品管理・追跡が楽に。",
        "benefits": ["備品管理が楽", "Excel化", "追跡も簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内備品貸出管理表自動作成のコードを作成してください。貸出情報をExcelに保存。\n\nコピペ用プロンプト:\nPythonで社内備品貸出管理表自動作成のコードを作成してください。pandasライブラリを使って貸出情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 89,
        "category": "顧客管理",
        "number": "89/100",
        "title": "顧客フォローアップリスト自動生成",
        "desc": "顧客フォローアップリストを自動でExcel化",
        "how_to": "CSV顧客データからフォローアップリストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('customers.csv')\ndf[['氏名', '最終連絡日', '次回連絡予定']].to_excel('followup_list.xlsx', index=False)\nprint('フォローアップリスト作成完了！')",
        "libraries": "pandas",
        "explanation": "顧客フォローアップリストを自動で作成。営業活動や顧客管理に活用。",
        "benefits": ["営業活動が楽", "Excel化", "顧客管理に活用"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで顧客フォローアップリスト自動生成のコードを作成してください。CSVからExcelリスト作成。\n\nコピペ用プロンプト:\nPythonで顧客フォローアップリスト自動生成のコードを作成してください。pandasライブラリを使ってCSVファイルから顧客フォローアップリストをExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 90,
        "category": "スタッフ管理",
        "number": "90/100",
        "title": "社員勤務時間自動集計",
        "desc": "社員の勤務時間を自動で集計・レポート化",
        "how_to": "CSV勤務データから社員ごとの勤務時間を自動集計しExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('work_hours.csv')\nsummary = df.groupby('氏名')['勤務時間'].sum()\nsummary.to_excel('work_hours_summary.xlsx')\nprint('勤務時間集計完了！')",
        "libraries": "pandas",
        "explanation": "社員勤務時間を自動で集計。給与計算や勤怠管理に活用。",
        "benefits": ["給与計算が楽", "Excel化", "勤怠管理に活用"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社員勤務時間自動集計のコードを作成してください。CSVからExcel集計表作成。\n\nコピペ用プロンプト:\nPythonで社員勤務時間自動集計のコードを作成してください。pandasライブラリを使ってCSVファイルから社員勤務時間を集計してExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 91,
        "category": "データ処理・分析",
        "number": "91/100",
        "title": "取引先別売上レポート自動作成",
        "desc": "取引先別の売上レポートを自動でExcel化",
        "how_to": "CSV売上データから取引先別の売上レポートを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('sales.csv')\nreport = df.groupby('取引先')['売上'].sum()\nreport.to_excel('sales_report.xlsx')\nprint('売上レポート作成完了！')",
        "libraries": "pandas",
        "explanation": "取引先別売上レポートを自動で作成。営業戦略や分析に活用。",
        "benefits": ["営業戦略に活用", "Excel化", "分析も簡単"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先別売上レポート自動作成のコードを作成してください。CSVからExcelレポート作成。\n\nコピペ用プロンプト:\nPythonで取引先別売上レポート自動作成のコードを作成してください。pandasライブラリを使ってCSVファイルから取引先別売上レポートをExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 92,
        "category": "データ処理・分析",
        "number": "92/100",
        "title": "社内研修アンケート集計",
        "desc": "社内研修アンケート結果を自動で集計・グラフ化",
        "how_to": "CSVアンケートデータを自動で集計し、グラフも作成します。",
        "sample_code": "import pandas as pd\nimport matplotlib.pyplot as plt\ndf = pd.read_csv('training_survey.csv')\ncounts = df['満足度'].value_counts()\ncounts.plot(kind='pie', autopct='%1.1f%%')\nplt.savefig('training_survey_chart.png')\nprint('集計・グラフ作成完了！')",
        "libraries": "pandas、matplotlib",
        "explanation": "社内研修アンケート集計・グラフ化を自動化。研修改善に活用。",
        "benefits": ["研修改善に活用", "グラフも自動", "報告書作成時短"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内研修アンケート集計のコードを作成してください。CSVから集計・グラフ作成。\n\nコピペ用プロンプト:\nPythonで社内研修アンケート集計のコードを作成してください。pandasとmatplotlibライブラリを使ってCSVファイルから社内研修アンケートを集計・グラフ作成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 93,
        "category": "文書作成・管理",
        "number": "93/100",
        "title": "商品発注書自動作成",
        "desc": "商品発注書を自動でPDF化",
        "how_to": "商品名・数量・金額を入力するだけで発注書PDFを自動作成します。",
        "sample_code": "from reportlab.pdfgen import canvas\nc = canvas.Canvas('order_form.pdf')\nc.drawString(100, 750, '発注書')\nc.drawString(100, 700, '株式会社サプライヤー 御中')\nc.drawString(100, 650, '商品: 商品A 数量: 100個 金額: 50,000円')\nc.save()\nprint('PDF作成完了！')",
        "libraries": "reportlab",
        "explanation": "商品発注書を自動でPDF化。手書き・転記不要。",
        "benefits": ["手書き不要", "PDF化", "時短"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで商品発注書自動作成のコードを作成してください。商品名・数量・金額からPDF発注書を自動生成。\n\nコピペ用プロンプト:\nPythonで商品発注書自動作成のコードを作成してください。reportlabライブラリを使って商品名・数量・金額からPDF発注書を自動生成するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 94,
        "category": "スタッフ管理",
        "number": "94/100",
        "title": "社員名刺管理リスト自動作成",
        "desc": "社員の名刺管理リストを自動でExcel化",
        "how_to": "CSVや手入力データから名刺管理リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'氏名': '山田太郎', '部署': '営業', '名刺枚数': 500},\n    {'氏名': '佐藤花子', '部署': '総務', '名刺枚数': 300}\n]\npd.DataFrame(data).to_excel('business_card.xlsx', index=False)\nprint('名刺管理リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "社員名刺管理リストを自動で作成。名刺発注・管理が楽に。",
        "benefits": ["名刺発注が楽", "Excel化", "管理が簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社員名刺管理リスト自動作成のコードを作成してください。名刺情報をExcelに保存。\n\nコピペ用プロンプト:\nPythonで社員名刺管理リスト自動作成のコードを作成してください。pandasライブラリを使って名刺情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 95,
        "category": "データ処理・分析",
        "number": "95/100",
        "title": "取引先別支払条件リスト自動作成",
        "desc": "取引先ごとの支払条件リストを自動でExcel化",
        "how_to": "CSV支払条件データから取引先別の支払条件リストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('payment_terms.csv')\ndf.to_excel('payment_terms_list.xlsx', index=False)\nprint('支払条件リスト作成完了！')",
        "libraries": "pandas",
        "explanation": "取引先別支払条件リストを自動で作成。資金繰り管理に活用。",
        "benefits": ["資金繰り管理", "Excel化", "管理が簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで取引先別支払条件リスト自動作成のコードを作成してください。CSVからExcelリスト作成。\n\nコピペ用プロンプト:\nPythonで取引先別支払条件リスト自動作成のコードを作成してください。pandasライブラリを使ってCSVファイルから取引先別支払条件リストをExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 96,
        "category": "スタッフ管理",
        "number": "96/100",
        "title": "社内イベント予算管理表自動作成",
        "desc": "社内イベントの予算管理表を自動でExcel化",
        "how_to": "CSVや手入力データからイベント予算管理表を自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'項目': '会場費', '予算': 100000, '実績': 95000},\n    {'項目': '飲食費', '予算': 50000, '実績': 48000}\n]\npd.DataFrame(data).to_excel('event_budget.xlsx', index=False)\nprint('予算管理表作成完了！')",
        "libraries": "pandas",
        "explanation": "社内イベント予算管理表を自動で作成。予算管理・分析が楽に。",
        "benefits": ["予算管理が楽", "Excel化", "分析も簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内イベント予算管理表自動作成のコードを作成してください。予算情報をExcelに保存。\n\nコピペ用プロンプト:\nPythonで社内イベント予算管理表自動作成のコードを作成してください。pandasライブラリを使って予算情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 97,
        "category": "顧客管理",
        "number": "97/100",
        "title": "顧客別購入履歴分析",
        "desc": "顧客の購入履歴を自動で分析・レポート化",
        "how_to": "CSV購入履歴データから顧客別の購入分析を自動で行いExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('purchase_history.csv')\nanalysis = df.groupby('顧客名')['購入金額'].agg(['sum', 'count', 'mean'])\nanalysis.to_excel('purchase_analysis.xlsx')\nprint('購入履歴分析完了！')",
        "libraries": "pandas",
        "explanation": "顧客別購入履歴を自動で分析。マーケティング戦略に活用。",
        "benefits": ["マーケティング戦略", "Excel化", "分析に活用"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで顧客別購入履歴分析のコードを作成してください。CSVからExcel分析表作成。\n\nコピペ用プロンプト:\nPythonで顧客別購入履歴分析のコードを作成してください。pandasライブラリを使ってCSVファイルから顧客別購入履歴を分析してExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 98,
        "category": "スタッフ管理",
        "number": "98/100",
        "title": "社内備品棚卸しリスト自動作成",
        "desc": "社内備品の棚卸しリストを自動でExcel化",
        "how_to": "CSVや手入力データから備品棚卸しリストを自動でExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'備品名': 'ノートPC', '台数': 10, '状態': '良好'},\n    {'備品名': 'プロジェクター', '台数': 2, '状態': '要修理'}\n]\npd.DataFrame(data).to_excel('inventory_check.xlsx', index=False)\nprint('棚卸しリスト作成完了！')",
        "libraries": "pandas",
        "explanation": "社内備品の棚卸しリストを自動で作成。資産管理・点検が楽に。",
        "benefits": ["資産管理が楽", "Excel化", "点検も簡単"],
        "time_required": "10分〜30分",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内備品棚卸しリスト自動作成のコードを作成してください。棚卸し情報をExcelに保存。\n\nコピペ用プロンプト:\nPythonで社内備品棚卸しリスト自動作成のコードを作成してください。pandasライブラリを使って棚卸し情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 99,
        "category": "データ処理・分析",
        "number": "99/100",
        "title": "顧客別売上予測分析",
        "desc": "顧客の売上予測を自動で分析・レポート化",
        "how_to": "CSV売上データから顧客別の売上予測を自動で行いExcel化します。",
        "sample_code": "import pandas as pd\ndf = pd.read_csv('sales_history.csv')\nprediction = df.groupby('顧客名')['売上'].mean() * 1.1\nprediction.to_excel('sales_prediction.xlsx')\nprint('売上予測分析完了！')",
        "libraries": "pandas",
        "explanation": "顧客別売上予測を自動で分析。営業戦略や予算策定に活用。",
        "benefits": ["営業戦略に活用", "Excel化", "予算策定も簡単"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで顧客別売上予測分析のコードを作成してください。CSVからExcel予測表作成。\n\nコピペ用プロンプト:\nPythonで顧客別売上予測分析のコードを作成してください。pandasライブラリを使ってCSVファイルから顧客別売上予測を分析してExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    },
    {
        "id": 100,
        "category": "データ処理・分析",
        "number": "100/100",
        "title": "社内業務効率化レポート自動作成",
        "desc": "社内業務の効率化レポートを自動でExcel化",
        "how_to": "CSV業務データから効率化レポートを自動で作成しExcel化します。",
        "sample_code": "import pandas as pd\ndata = [\n    {'業務名': 'データ入力', '改善前': '2時間', '改善後': '30分'},\n    {'業務名': 'レポート作成', '改善前': '3時間', '改善後': '1時間'}\n]\npd.DataFrame(data).to_excel('efficiency_report.xlsx', index=False)\nprint('効率化レポート作成完了！')",
        "libraries": "pandas",
        "explanation": "社内業務効率化レポートを自動で作成。業務改善・分析に活用。",
        "benefits": ["業務改善に活用", "Excel化", "分析も簡単"],
        "time_required": "30分〜1時間",
        "difficulty": "初級",
        "ai_prompt": "Pythonで社内業務効率化レポート自動作成のコードを作成してください。業務効率化情報をExcelに保存。\n\nコピペ用プロンプト:\nPythonで社内業務効率化レポート自動作成のコードを作成してください。pandasライブラリを使って業務効率化情報をExcelファイルに保存するコードを書いてください。初心者でも理解できるようにコメントを詳しく書いてください。"
    }
] 